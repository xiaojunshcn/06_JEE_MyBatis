<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="namespaceUser">
	<resultMap id="UserInfoResult" type="com.joe.mybatis.model.User"/>
	
	<!--attributes in User.java: 
	int id;	String name; Integer age; java.util.Date createTime; String email; String telephone;
	
	create table student(
		id int(4) not null primary key auto_increment,
		name varchar(20) not null,		age int(11) DEFAULT NULL,		createTime date DEFAULT NULL,
		email varchar(30) not null,		contact_number varchar(20) 
	);	
	-->
	
	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="insert" parameterType="com.joe.mybatis.model.User" 
		useGeneratedKeys="true" keyProperty="id" 
	>
    <![CDATA[
        INSERT INTO student (
        	id, name, age, createTime, email, contact_number 
        ) VALUES (
        	#{id,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{createTime,jdbcType=DATE} ,
        	#{email,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}
        )
    ]]>
		<!--
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="commonColumns">
	    <![CDATA[
        	id,
        	name,
        	age,
        	createTime,
        	email,
        	contact_number as telephone
	    ]]>
	</sql>
	<select id="getById" parameterType="int" resultMap="UserInfoResult">
		select <include refid="commonColumns" />
	    <![CDATA[
		    from student 
	        where 
		        id = #{id}
	    ]]>
	</select>
	
	<update id="update" parameterType="com.joe.mybatis.model.User">
    <![CDATA[
        UPDATE student SET
	        name = #{name,jdbcType=VARCHAR},
	        age = #{age,jdbcType=INTEGER},
	        createTime = #{createTime,jdbcType=DATE},
	        email = #{email,jdbcType=VARCHAR},
	        contact_number = #{telephone,jdbcType=VARCHAR}
        WHERE 
	        id = #{id} 
    ]]>
	</update>
	
	<delete id="delete" parameterType="java.lang.Integer">
    <![CDATA[
        delete from student where id = #{id} 
    ]]>
    </delete>
    
	<sql id="dynamicWhere">
		<where>
	       <if test="id != null">
				and id = #{id}
			</if>
	       <if test="name != null">
				and name = #{name}
			</if>
	       <if test="email != null">
				and email = #{email}
			</if>
	       <if test="age != null">
				and age = #{age}
			</if>
		</where>
	</sql>
	
	<!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 #offset#,#pageSize#,#lastRows# 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="pageSelect" resultMap="UserInfoResult">
    	select <include refid="commonColumns" />
	    from student 
		<include refid="dynamicWhere"/>
		<if test="sortColumns != null and sortColumns.length() != 0">
			ORDER BY ${sortColumns}
		</if>
    </select>
</mapper>